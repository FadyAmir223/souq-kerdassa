model Order {
  id String @id @default(cuid())

  products   ProductOrder[]
  totalPrice Float
  status     OrderStatus    @default(pending)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  addressId String  @unique
  address   Address @relation(fields: [addressId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductOrder {
  id String @id @default(cuid())

  quantity Int

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  productVariantId String
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id], onDelete: Cascade)

  orderId String
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  pending
  completed
  cancelled
}
