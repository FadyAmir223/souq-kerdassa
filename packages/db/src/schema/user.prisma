model User {
  id String @id @default(cuid())

  name     String
  phone    String  @unique
  password String?
  role     Role    @default(USER)

  addresses Address[]
  reviews   Review[]

  sessions Session[]
  accounts Account[]
  orders   Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([phone])
}

enum Role {
  USER
  ADMIN
}

model Session {
  id String @id @default(cuid())

  sessionToken String   @unique
  accessToken  String?
  expires      DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
}
