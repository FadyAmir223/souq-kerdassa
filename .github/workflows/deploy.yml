name: 'Deploy to VPS'

on:
  # push:
  #   branches:
  #     - main
  #   tags:
  #     - 'v[0-9]+.[0-9]+.[0-9]+.deploy'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          echo "${{ secrets.SECRET_ENVS }}" > ./apps/web/envs/production/.env.production.build.local
          echo "${{ secrets.PRODUCTION_LOCAL }}" > ./apps/web/envs/production/.env.production.local
          docker compose -f docker-compose.prod.yml --env-file=apps/web/envs/production/.env.production build app-prod

      - name: Save Docker image as tar file
        run: docker save -o app-prod.tar fadyamir/app-prod

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no app-prod.tar \
          ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_ADDRESS }}:${{ secrets.VPS_PATH }}

      - name: Load Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_ADDRESS }} << \
          'ENDSSH'
            docker load -i ${{ secrets.VPS_PATH }}/app-prod.tar
            rm ${{ secrets.VPS_PATH }}/app-prod.tar
          ENDSSH

      - name: Transfer Docker Compose file to remote server
        run: |
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" \
          docker-compose.prod.yml \
          packages/db/src/migrations/ \
          ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_ADDRESS }}:${{ secrets.VPS_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_ADDRESS }} << \
          'ENDSSH'
            cd ${{ secrets.VPS_PATH }}
            docker compose -f docker-compose.prod.yml up -d app-prod
            docker system prune --volumes --all --force
          ENDSSH
